import Head from 'next/head';
import styles from '../styles/Home.module.css';

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import { gql } from '@apollo/client';
import client from './api/anilist-client';

export default function AnimeDetailPage() {
    const router = useRouter();
    const [animeInfo, setAnimeInfo] = useState(null);

    useEffect(() => {
        const animeID = router.query.id || null;
        if (animeID) {
            getAnimeInfo(animeID);
        }
    }, [router.query.id]);

    async function getAnimeInfo(id) {
        try {
            const { data } = await client.query({
                query: GET_ANIMES_QUERY,
                variables: {
                    id: parseInt(id),
                },
            });
            setAnimeInfo(data.Media);
        } catch (error) {
            console.error('Error fetching anime data:', error);
        }
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>AnimExplore</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                {animeInfo ? (
                    <>
                        <span className={styles.title}>{animeInfo.title.english}</span>
                        <span>{animeInfo.title.romaji} ({animeInfo.title.native})</span>
                        <span>{animeInfo.description.replace(/<br>/g, '')}</span>
                    </>
                ) : (
                    <h1 className={styles.title}>Loading...</h1>
                )}
            </main>
        </div>
    );
}

const GET_ANIMES_QUERY = gql`
    query ($id: Int) {
        Media(id: $id, type: ANIME) {
            id
            title {
                romaji
                english
                native
            }
            episodes
            averageScore
            bannerImage
            description
        }
    }
`;
